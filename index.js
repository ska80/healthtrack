// Generated by purs bundle 0.12.0
var PS = {};
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function createClass(baseClass) {
    function bindProperty(instance, prop, value) {
      switch (prop) {
        case 'state':
        case 'render':
        case 'componentDidMount':
        case 'componentWillUnmount':
          instance[prop] = value;
          break;

        case 'componentDidCatch':
        case 'componentWillUpdate':
        case 'shouldComponentUpdate':
        case 'getSnapshotBeforeUpdate':
          instance[prop] = function (a, b) { return value(a)(b)(); };
          break;

        case 'componentDidUpdate':
          instance[prop] = function (a, b, c) { return value(a)(b)(c)(); };
          break;

        case 'unsafeComponentWillMount':
          instance['UNSAFE_componentWillMount'] = value;
          break;

        case 'unsafeComponentWillReceiveProps':
          instance['UNSAFE_componentWillReceiveProps'] = function (a) { return value(a)(); };
          break;

        case 'unsafeComponentWillUpdate':
          instance['UNSAFE_componentWillUpdate'] = function (a, b) { return value(a)(b)(); };
          break;

        default:
          throw new Error('[purescript-react] Not a component property: ' + prop);
      }
    }

    return function (displayName) {
      return function (ctrFn) {
        var Constructor = function (props) {
          baseClass.call(this, props);
          var spec = ctrFn(this)();
          for (var k in spec) {
            bindProperty(this, k, spec[k]);
          }
        };

        Constructor.displayName = displayName;
        Constructor.prototype = Object.create(baseClass.prototype);
        Constructor.prototype.constructor = Constructor;

        return Constructor;
      };
    };
  }

  function createClassWithDerivedState(classCtr) {
    return function(displayName) {
      return function(getDerivedStateFromProps) {
        return function(ctrFn) {
          var Constructor = componentImpl(displayName)(ctrFn);
          Constructor.getDerivedStateFromProps = function(a, b) { return getDerivedStateFromProps(a)(b) };
          return Constructor;
        };
      };
    };
  }                                                                                          

  exports.statelessComponent = function(x) { return x; };

  function getProps(this_) {
    return function(){
      return this_.props;
    };
  }                                            

  function setStateImpl(this_) {
    return function(state){
      return function(){
        this_.setState(state);
      };
    };
  }                                   

  function setStateWithCallbackImpl(this_) {
    return function(state){
      return function(cb){
        return function() {
          this_.setState(state, cb);
        };
      };
    };
  }                                                           

  function getState(this_) {
    return function(){
      if (!this_.state) {
        throw new Error('[purescript-react] Cannot get state within constructor');
      }
      return this_.state;
    };
  }                           

  function forceUpdateWithCallback(this_) {
    return function(cb) {
      return function() {
        this_.forceUpdate(cb);
      };
    };
  }                                                         

  function createElement(class_) {
    return function(props){
      return function(children){
        return React.createElement.apply(React, [class_, props].concat(children));
      };
    };
  }
  exports.createElementImpl = createElement;   

  function createLeafElement(class_) {
    return function(props) {
      return React.createElement(class_, props);
    };
  }                                                 

  function createElementDynamic(class_) {
    return function(props) {
      return function(children){
        return React.createElement(class_, props, children);
      };
    };
  };                                                         

  function createContext(defaultValue) {
    var context = React.createContext(defaultValue);
    return {
      consumer: context.Consumer,
      provider: context.Provider
    };
  }
})(PS["React"] = PS["React"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["React"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Prelude = PS["Prelude"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                           
  var unsafeCreateElement = $foreign.createElementImpl;
  exports["unsafeCreateElement"] = unsafeCreateElement;
  exports["statelessComponent"] = $foreign.statelessComponent;
})(PS["React"] = PS["React"] || {});
(function(exports) {const RN = require("react-native")

  exports.registerComponent = function(name){
    return function(component){
      return function(){
        RN.AppRegistry.registerComponent(name, function(){ return component; });
      }
    }
  }
})(PS["ReactNative.API"] = PS["ReactNative.API"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["ReactNative.API"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var React = PS["React"];
  exports["registerComponent"] = $foreign.registerComponent;
})(PS["ReactNative.API"] = PS["ReactNative.API"] || {});
(function(exports) {
    'use strict';

  const RN = require("react-native");                       
  exports.textClass                     = RN.Text;
})(PS["ReactNative.Unsafe.Components"] = PS["ReactNative.Unsafe.Components"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["ReactNative.Unsafe.Components"];
  var React = PS["React"];                                                      
  var textU = React.unsafeCreateElement($foreign.textClass);
  exports["textU"] = textU;
})(PS["ReactNative.Unsafe.Components"] = PS["ReactNative.Unsafe.Components"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var React = PS["React"];
  var ReactNative_Components = PS["ReactNative.Components"];
  var ReactNative_Events = PS["ReactNative.Events"];
  var ReactNative_Optional = PS["ReactNative.Optional"];
  var ReactNative_Styles = PS["ReactNative.Styles"];
  var ReactNative_Unsafe_ApplyProps = PS["ReactNative.Unsafe.ApplyProps"];
  var ReactNative_Unsafe_Components = PS["ReactNative.Unsafe.Components"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var textElem = Unsafe_Coerce.unsafeCoerce;
  var text_ = function (s) {
      return ReactNative_Unsafe_Components.textU({})([ textElem(s) ]);
  };
  exports["textElem"] = textElem;
  exports["text_"] = text_;
})(PS["ReactNative.Components.Text"] = PS["ReactNative.Components.Text"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var ReactNative_API = PS["ReactNative.API"];
  var ReactNative_Components_Text = PS["ReactNative.Components.Text"];                 
  var app = (function () {
      var render = function (v) {
          return ReactNative_Components_Text.text_("Hello World");
      };
      return React.statelessComponent(render);
  })();
  var main = ReactNative_API.registerComponent("HealthTrack")(app);
  exports["app"] = app;
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
